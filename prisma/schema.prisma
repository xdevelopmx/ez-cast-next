generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("NEXT_PUBLIC_DATABASE_URL")
}

model TalentosRepresentados {
  id               Int      @id @default(autoincrement())
  id_representante Int
  id_talento       Int
  hora_asignacion  DateTime
}

model Conversaciones {
  id                    Int    @id @default(autoincrement())
  id_emisor             Int
  id_receptor           Int
  tipo_usuario_emisor   String
  tipo_usuario_receptor String
  emisor_perfil_url     String
  receptor_perfil_url   String
  id_proyecto           Int?
}

model Mensaje {
  id                    Int      @id @default(autoincrement())
  id_conversacion       Int
  id_emisor             Int
  id_receptor           Int
  visto                 Boolean
  hora_envio            DateTime
  mensaje               String   @db.VarChar(1024)
  type                  String
  tipo_usuario_emisor   String
  tipo_usuario_receptor String
}

model Alertas {
  id           Int     @id @default(autoincrement())
  id_usuario   Int
  tipo_usuario String
  visto        Boolean
  mensaje      String  @db.VarChar(1024)
}

model HorarioAgenda {
  id                Int                              @id @default(autoincrement())
  tipo_agenda       String
  tipo_localizacion String
  notas             String
  id_uso_horario    Int
  id_proyecto       Int                              @unique
  fecha_creacion    DateTime
  tipo_fechas       String
  bloque_horario    BloqueHorariosAgenda[]
  fechas            FechasPorHorarioAgenda[]
  proyecto          Proyecto                         @relation(fields: [id_proyecto], references: [id], onDelete: Cascade)
  uso_horario       CatalogoTipoUsosHorario          @relation(fields: [id_uso_horario], references: [id])
  localizaciones    LocalizacionesPorHorarioAgenda[]
}

model BloqueHorariosAgenda {
  id                            Int                            @id @default(autoincrement())
  id_horario_agenda             Int
  fecha                         DateTime
  hora_inicio                   String
  hora_fin                      String
  minutos_por_talento           Int
  hora_descanso_inicio          String?
  hora_descanso_fin             String?
  id_locacion                   Int
  tipo_administracion_intervalo String
  horario_agenda                HorarioAgenda                  @relation(fields: [id_horario_agenda], references: [id], onDelete: Cascade)
  locacion                      LocalizacionesPorHorarioAgenda @relation(fields: [id_locacion], references: [id], onDelete: Cascade)
}

model IntervaloBloqueHorario {
  id                Int    @id @default(autoincrement())
  id_bloque_horario Int
  id_rol            Int?
  id_talento        Int?
  estado            String
  tipo              String
  hora              String
}

model LocalizacionesGuardadas {
  id                  Int     @id @default(autoincrement())
  id_estado_republica Int
  direccion           String
  direccion2          String?
  codigo_postal       Int
  id_usuario          Int
  tipo_usuario        String
}

model LocalizacionesPorHorarioAgenda {
  id                    Int                      @id @default(autoincrement())
  id_estado_republica   Int
  direccion             String
  direccion2            String?
  codigo_postal         Int
  id_horario_agenda     Int
  bloque_horario_agenda BloqueHorariosAgenda[]
  estado_republica      CatalogoEstadosRepublica @relation(fields: [id_estado_republica], references: [id])
  horario_agenda        HorarioAgenda            @relation(fields: [id_horario_agenda], references: [id], onDelete: Cascade)
}

model FechasPorHorarioAgenda {
  id                Int           @id @default(autoincrement())
  fecha_inicio      DateTime
  fecha_fin         DateTime?
  id_horario_agenda Int
  horario_agenda    HorarioAgenda @relation(fields: [id_horario_agenda], references: [id], onDelete: Cascade)
}

model Cazatalentos {
  id                   Int                            @id @default(autoincrement())
  usuario              String
  email                String
  contrasenia          String
  nombre               String
  apellido             String
  tipo_membresia       String
  cobro_membresia      String
  id_openpay           String
  posicion             String
  compania             String
  biografia            String
  id_foto_perfil_media Int?
  foto_perfil          Media?                         @relation(fields: [id_foto_perfil_media], references: [id])
  notas_talentos       NotasTalentos[]
  proyectos            Proyecto[]
  redes_sociales       RedesSocialesPorCazatalentos[]
  reportes_talentos    ReporteTalentos[]
  talentos_destacados  TalentosDestacados[]
}

model Representante {
  id                   Int                             @id @default(autoincrement())
  usuario              String
  email                String
  contrasenia          String
  nombre               String
  apellido             String
  tipo_membresia       String
  cobro_membresia      String
  id_openpay           String
  id_foto_perfil_media Int?
  posicion             String
  compania             String
  biografia            String                          @db.VarChar(512)
  verificado           Boolean                         @default(false)
  cuentas              CuentasPorRepresentante?
  info_basica          InfoBasicaRepresentante?
  permisos             PermisosRepresentante?
  redes_sociales       RedesSocialesPorRepresentante[]
  foto_perfil          Media?                          @relation(fields: [id_foto_perfil_media], references: [id])
  validacion           ValidacionRepresentante?
}

model InfoBasicaRepresentante {
  id                  Int                              @id @default(autoincrement())
  id_representante    Int                              @unique
  id_estado_republica Int
  direccion           String
  cp                  Int
  id_media_cv         Int?
  estado_republica    CatalogoEstadosRepublica         @relation(fields: [id_estado_republica], references: [id])
  media               Media?                           @relation(fields: [id_media_cv], references: [id])
  representante       Representante                    @relation(fields: [id_representante], references: [id], onDelete: Cascade)
  union               UnionPorInfoBasicaRepresentante?
}

model UnionPorInfoBasicaRepresentante {
  id                           Int                     @id @default(autoincrement())
  id_union                     Int
  descripcion                  String?
  id_info_basica_representante Int                     @unique
  info_basica_represntante     InfoBasicaRepresentante @relation(fields: [id_info_basica_representante], references: [id], onDelete: Cascade)
  union                        CatalogoUniones         @relation(fields: [id_union], references: [id])
}

model PermisosRepresentante {
  id                                      Int           @id @default(autoincrement())
  puede_editar_perfil_talento             Boolean
  puede_editar_perfil_representante       Boolean
  id_representante                        Int           @unique
  puede_aceptar_solicitudes_representante Boolean
  puede_aceptar_solicitudes_talento       Boolean
  representante                           Representante @relation(fields: [id_representante], references: [id], onDelete: Cascade)
}

model CuentasPorRepresentante {
  id                 Int           @id @default(autoincrement())
  nombre             String
  apellido           String
  correo_electronico String
  lada               String
  telefono           String
  id_representante   Int           @unique
  tipo_cuenta        String
  representante      Representante @relation(fields: [id_representante], references: [id], onDelete: Cascade)
}

model ValidacionRepresentante {
  id                      Int           @id @default(autoincrement())
  id_media_copia_licencia Int?
  numero_clientes         Int
  imdb_pro_link           String
  id_representante        Int           @unique
  media                   Media?        @relation(fields: [id_media_copia_licencia], references: [id])
  representante           Representante @relation(fields: [id_representante], references: [id], onDelete: Cascade)
}

model DirectoresCastingValidacionRepresentante {
  id                 Int    @id @default(autoincrement())
  id_validacion      Int
  nombre             String
  apellido           String
  correo_electronico String
  telefono           String
}

model Talentos {
  id                 Int                           @id @default(autoincrement())
  apellido           String
  cobro_membresia    String
  contrasenia        String
  email              String
  nombre             String
  tipo_membresia     String
  usuario            String
  es_destacado       Boolean                       @default(false)
  activo             Boolean                       @default(true)
  activos            ActivosPorTalentos?
  aplicaciones       AplicacionRolPorTalento[]
  audiciones         AudicionTalento[]
  creditos           CreditosPorTalentos?
  filtros_aparencias FiltrosAparenciasPorTalentos?
  habilidades        HabilidadesPorTalentos[]
  info_basica        InfoBasicaPorTalentos?
  media              MediaPorTalentos[]
  medidas            MedidasPorTalentos?
  notas              NotasTalentos[]
  preferencias       PreferenciasPorTalentos?
  redes_sociales     RedesSocialesPorTalentos[]
  reportes           ReporteTalentos[]
  representante      RepresentantesPorTalentos?
  destacados         TalentosDestacados?
}

model MedidasPorTalentos {
  id                   Int      @id @default(autoincrement())
  id_talento           Int      @unique
  hombre_pecho         Int?
  hombre_cuello        Int?
  hombre_mangas        Int?
  hombre_saco          String?
  hombre_playera       String?
  hombre_calzado       Float?
  mujer_vestido        Int?
  mujer_busto          Int?
  mujer_copa           String?
  mujer_cadera         Int?
  mujer_playera        String?
  mujer_pants          Int?
  mujer_calzado        Float?
  nino_4_18_anios      String?
  nina_4_18_anios      String?
  toddler              String?
  bebe_meses           String?
  calzado_ninos        String?
  general_cadera       Int?
  general_entrepiernas Int?
  general_guantes      Int?
  general_sombrero     Int?
  talento              Talentos @relation(fields: [id_talento], references: [id], onDelete: Cascade)
}

model RepresentantesPorTalentos {
  id                        Int      @id @default(autoincrement())
  nombre                    String
  agencia                   String
  email                     String
  telefono                  String
  id_talento                Int      @unique
  id_media_carta_responsiva Int?
  media                     Media?   @relation(fields: [id_media_carta_responsiva], references: [id])
  talento                   Talentos @relation(fields: [id_talento], references: [id], onDelete: Cascade)
}

model InfoBasicaPorTalentos {
  id                  Int                        @id @default(autoincrement())
  edad                Int
  peso                Int
  altura              Int
  biografia           String                     @db.VarChar(512)
  id_talento          Int                        @unique
  id_estado_republica Int
  id_media_cv         Int?
  estado_republica    CatalogoEstadosRepublica   @relation(fields: [id_estado_republica], references: [id])
  talento             Talentos                   @relation(fields: [id_talento], references: [id], onDelete: Cascade)
  media               Media?                     @relation(fields: [id_media_cv], references: [id], map: "media_cv")
  union               UnionPorInfoBasicaTalento?
}

model CreditosPorTalentos {
  id                  Int              @id @default(autoincrement())
  id_talento          Int              @unique
  mostrar_anio_perfil Boolean
  creditos            CreditoTalento[]
  talento             Talentos         @relation(fields: [id_talento], references: [id], onDelete: Cascade)
}

model CreditoTalento {
  id                      Int                 @id @default(autoincrement())
  id_creditos_por_talento Int
  id_catalogo_proyecto    Int
  titulo                  String
  rol                     String
  director                String
  anio                    Int
  destacado               Boolean
  id_media_clip           Int?
  creditos_por_talentos   CreditosPorTalentos @relation(fields: [id_creditos_por_talento], references: [id], onDelete: Cascade)
  media                   Media?              @relation(fields: [id_media_clip], references: [id], map: "creditos_talento")
}

model HabilidadesPorTalentos {
  id                      Int                            @id @default(autoincrement())
  id_habilidad_especifica Int
  id_talento              Int
  id_habilidad            Int
  habilidad_especifica    CatalogoHabilidadesEspecificas @relation(fields: [id_habilidad_especifica], references: [id], onDelete: Cascade)
  habilidad               CatalogoHabilidades            @relation(fields: [id_habilidad], references: [id], onDelete: Cascade)
  talento                 Talentos                       @relation(fields: [id_talento], references: [id], onDelete: Cascade)
}

model UnionPorInfoBasicaTalento {
  id                          Int                   @id @default(autoincrement())
  id_union                    Int
  descripcion                 String?
  id_info_basica_por_talentos Int                   @unique
  info_basica_por_talentos    InfoBasicaPorTalentos @relation(fields: [id_info_basica_por_talentos], references: [id], onDelete: Cascade)
  union                       CatalogoUniones       @relation(fields: [id_union], references: [id])
}

model CatalogoUniones {
  id                            Int                               @id
  en                            String
  es                            String
  sindicato_por_proyecto        SindicatoPorProyecto[]
  union_por_representante       UnionPorInfoBasicaRepresentante[]
  union_por_info_basica_talento UnionPorInfoBasicaTalento[]
}

model RedesSocialesPorTalentos {
  id         Int      @id @default(autoincrement())
  nombre     String
  url        String
  id_talento Int
  talento    Talentos @relation(fields: [id_talento], references: [id], onDelete: Cascade)
}

model RedesSocialesPorCazatalentos {
  id              Int          @id @default(autoincrement())
  nombre          String
  url             String
  id_cazatalentos Int
  cazatalentos    Cazatalentos @relation(fields: [id_cazatalentos], references: [id], onDelete: Cascade)
}

model RedesSocialesPorRepresentante {
  id               Int           @id @default(autoincrement())
  nombre           String
  url              String
  id_representante Int
  representante    Representante @relation(fields: [id_representante], references: [id], onDelete: Cascade)
}

model Administradores {
  id          Int    @id @default(autoincrement())
  usuario     String
  email       String
  contrasenia String
}

model Proyecto {
  id                    Int                      @id @default(autoincrement())
  nombre                String
  director_casting      String
  telefono_contacto     String
  email_contacto        String
  productor             String
  casa_productora       String
  director              String
  agencia_publicidad    String
  sinopsis              String
  detalles_adicionales  String
  compartir_nombre      Boolean                  @default(true)
  estatus               String                   @default("POR_VALIDAR")
  id_cazatalentos       Int
  id_estado_republica   Int
  created               DateTime                 @default(now())
  id_archivo_media      Int?
  id_foto_portada_media Int?
  destacado             Boolean                  @default(false)
  horario_agenda        HorarioAgenda?
  cazatalentos          Cazatalentos             @relation(fields: [id_cazatalentos], references: [id], onDelete: Cascade)
  estado_republica      CatalogoEstadosRepublica @relation(fields: [id_estado_republica], references: [id])
  archivo               Media?                   @relation("media_archivo", fields: [id_archivo_media], references: [id], map: "media_archivo")
  foto_portada          Media?                   @relation("media_foto_portada", fields: [id_foto_portada_media], references: [id], map: "media_foto_portada")
  rol                   Roles[]
  sindicato             SindicatoPorProyecto?
  tipo                  TipoProyectoPorProyecto?
}

model AplicacionRolPorTalento {
  id                   Int                              @id @default(autoincrement())
  id_rol               Int
  id_talento           Int
  id_estado_aplicacion Int
  id_ubicacion         Int
  nota                 String                           @default("")
  estado_aplicacion    CatalogoEstadosAplicacionesRoles @relation(fields: [id_estado_aplicacion], references: [id], onDelete: Cascade)
  rol                  Roles                            @relation(fields: [id_rol], references: [id], onDelete: Cascade)
  talento              Talentos                         @relation(fields: [id_talento], references: [id], onDelete: Cascade)
  estado_republica     CatalogoEstadosRepublica         @relation(fields: [id_ubicacion], references: [id])
}

model NotasTalentos {
  id              Int          @id @default(autoincrement())
  id_talento      Int
  nota            String
  id_cazatalentos Int
  cazatlentos     Cazatalentos @relation(fields: [id_cazatalentos], references: [id], onDelete: Cascade)
  talento         Talentos     @relation(fields: [id_talento], references: [id], onDelete: Cascade)
}

model TalentosDestacados {
  id              Int          @id @default(autoincrement())
  id_talento      Int          @unique
  calificacion    Int
  id_cazatalentos Int
  cazatalentos    Cazatalentos @relation(fields: [id_cazatalentos], references: [id], onDelete: Cascade)
  talento         Talentos     @relation(fields: [id_talento], references: [id], onDelete: Cascade)
}

model ReporteTalentos {
  id              Int                          @id @default(autoincrement())
  id_talento      Int
  id_tipo_reporte Int
  comentario      String
  id_cazatalentos Int
  cazatlentos     Cazatalentos                 @relation(fields: [id_cazatalentos], references: [id], onDelete: Cascade)
  talento         Talentos                     @relation(fields: [id_talento], references: [id], onDelete: Cascade)
  reporte         CatalogoTiposReportesTalento @relation(fields: [id_tipo_reporte], references: [id], onDelete: Cascade)
}

model AudicionTalento {
  id             Int      @id @default(autoincrement())
  id_talento     Int
  id_rol         Int
  tipo_audicion  String
  mensaje        String
  fecha_audicion DateTime
  rol            Roles    @relation(fields: [id_rol], references: [id], onDelete: Cascade)
  talento        Talentos @relation(fields: [id_talento], references: [id], onDelete: Cascade)
}

model CatalogoTiposReportesTalento {
  id              Int               @id
  es              String
  en              String
  ReporteTalentos ReporteTalentos[]
}

model CatalogoEstadosAplicacionesRoles {
  id                      Int                       @id
  es                      String
  en                      String
  AplicacionRolPorTalento AplicacionRolPorTalento[]
}

model Banners {
  id               Int     @id @default(autoincrement())
  redirect_url     String
  id_media_content Int
  isButton         Boolean
  position         String
  ref              String
  text             String
  type             String
  identificador    String
  content          Media   @relation(fields: [id_media_content], references: [id])
}

model TipoProyectoPorProyecto {
  id               Int                   @id @default(autoincrement())
  id_proyecto      Int                   @unique
  id_tipo_proyecto Int
  descripcion      String
  proyecto         Proyecto              @relation(fields: [id_proyecto], references: [id], onDelete: Cascade)
  tipo_proyecto    CatalogoTipoProyectos @relation(fields: [id_tipo_proyecto], references: [id])
}

model SindicatoPorProyecto {
  id           Int             @id @default(autoincrement())
  id_proyecto  Int             @unique
  id_sindicato Int
  descripcion  String
  proyecto     Proyecto        @relation(fields: [id_proyecto], references: [id], onDelete: Cascade)
  sindicato    CatalogoUniones @relation(fields: [id_sindicato], references: [id])
}

model CatalogoTipoProyectos {
  id                         Int                       @id
  en                         String
  es                         String
  tipo_proyecto_por_proyecto TipoProyectoPorProyecto[]
}

model Roles {
  id                       Int                       @id @default(autoincrement())
  nombre                   String
  id_tipo_rol              Int
  descripcion              String?
  detalles_adicionales     String?
  estatus                  String                    @default("SIN_FINALIZAR")
  id_proyecto              Int
  id_media_foto_referencia Int?
  id_media_lineas          Int?
  id_color_cabello         Int                       @default(1)
  id_color_ojos            Int                       @default(1)
  aplicaciones_por_talento AplicacionRolPorTalento[]
  audiciones_talentos      AudicionTalento[]
  casting                  CastingPorRoles[]
  compensaciones           CompensacionesPorRoles?
  filmaciones              FilmacionPorRoles[]
  filtros_demograficos     FiltrosDemoPorRoles?
  habilidades              HabilidadesPorRoles?
  nsfw                     NSFWPorRoles?
  requisitos               RequisitosPorRoles?
  color_cabello            CatalogoColorCabello      @relation(fields: [id_color_cabello], references: [id])
  color_ojos               CatalogoColorOjos         @relation(fields: [id_color_ojos], references: [id])
  proyecto                 Proyecto                  @relation(fields: [id_proyecto], references: [id], onDelete: Cascade)
  tipo_rol                 CatalogoTiposRoles        @relation(fields: [id_tipo_rol], references: [id])
  foto_referencia          Media?                    @relation("media_foto_referencia", fields: [id_media_foto_referencia], references: [id], map: "media_foto_referencia")
  lineas                   Media?                    @relation("media_lineas", fields: [id_media_lineas], references: [id], map: "media_lineas")
  selftape                 SelftapePorRoles?
  tipo_trabajos            TipoTrabajoPorRoles[]
}

model TipoTrabajoPorRoles {
  id              Int                 @id @default(autoincrement())
  id_rol          Int
  id_tipo_trabajo Int
  rol             Roles               @relation(fields: [id_rol], references: [id], onDelete: Cascade)
  tipo_trabajo    CatalogoTipoTrabajo @relation(fields: [id_tipo_trabajo], references: [id])
}

model SelftapePorRoles {
  id              Int     @id @default(autoincrement())
  id_rol          Int     @unique
  pedir_selftape  Boolean
  indicaciones    String  @db.VarChar(512)
  id_media_lineas Int?
  lineas          Media?  @relation(fields: [id_media_lineas], references: [id])
  rol             Roles   @relation(fields: [id_rol], references: [id], onDelete: Cascade)
}

model CatalogoTiposRoles {
  id   Int     @id @default(autoincrement())
  tipo String
  en   String
  es   String
  rol  Roles[]
}

model CatalogosCompNoMones {
  id                                     Int                        @id
  en                                     String
  es                                     String
  compensaciones_no_monetarias_por_roles CompNoMonetariasPorRoles[]
}

model HabilidadesPorRoles {
  id                        Int                        @id @default(autoincrement())
  especificacion            String?
  id_rol                    Int                        @unique
  rol                       Roles                      @relation(fields: [id_rol], references: [id], onDelete: Cascade, map: "habilidades")
  habilidades_seleccionadas HabilidadesSelecPorRoles[]
}

model HabilidadesSelecPorRoles {
  id                     Int                 @id @default(autoincrement())
  id_habilidades_por_rol Int
  id_habilidad           Int
  habilidad              CatalogoHabilidades @relation(fields: [id_habilidad], references: [id])
  habilidad_por_rol      HabilidadesPorRoles @relation(fields: [id_habilidades_por_rol], references: [id], onDelete: Cascade)
}

model CatalogoHabilidades {
  id                                  Int                              @id @default(autoincrement())
  en                                  String
  es                                  String
  habilidades_especificas             CatalogoHabilidadesEspecificas[]
  HabilidadesPorTalentos              HabilidadesPorTalentos[]
  habilidades_seleccionadas_por_roles HabilidadesSelecPorRoles[]
}

model CatalogoHabilidadesEspecificas {
  id                     Int                      @id @default(autoincrement())
  id_habilidad           Int
  en                     String
  es                     String
  habilidad              CatalogoHabilidades      @relation(fields: [id_habilidad], references: [id])
  HabilidadesPorTalentos HabilidadesPorTalentos[]
}

model NSFWPorRoles {
  id                 Int                         @id @default(autoincrement())
  descripcion        String?
  id_rol             Int                         @unique
  rol                Roles                       @relation(fields: [id_rol], references: [id], onDelete: Cascade, map: "nsfw")
  nsfw_seleccionados NSFWSeleccionadosPorRoles[]
}

model NSFWSeleccionadosPorRoles {
  id              Int          @id @default(autoincrement())
  id_nsfw         Int
  id_nsfw_por_rol Int
  nsfw            CatalogoNSFW @relation(fields: [id_nsfw], references: [id])
  nsfw_por_rol    NSFWPorRoles @relation(fields: [id_nsfw_por_rol], references: [id], onDelete: Cascade)
}

model CatalogoNSFW {
  id                        Int                         @id
  en                        String
  es                        String
  NSFWSeleccionadosPorRoles NSFWSeleccionadosPorRoles[]
}

model CatalogoTipoUsosHorario {
  id             Int                  @id
  es             String
  en             String
  agenda_horario HorarioAgenda[]
  requisitos_rol RequisitosPorRoles[]
}

model FiltrosDemoPorRoles {
  id                  Int                         @id @default(autoincrement())
  id_rol              Int                         @unique
  rango_edad_inicio   Int
  rango_edad_fin      Int
  rango_edad_en_meses Boolean
  id_pais             Int
  animal              AnimalPorRoles?
  aparencias_etnicas  AparenciasEtnicasPorRoles[]
  pais                CatalogoPaises              @relation(fields: [id_pais], references: [id])
  rol                 Roles                       @relation(fields: [id_rol], references: [id], onDelete: Cascade, map: "filtros")
  generos             GenerosPorRoles[]
}

model AnimalPorRoles {
  id                     Int                 @id @default(autoincrement())
  id_animal              Int
  descripcion            String
  tamanio                String
  id_filtro_demo_por_rol Int                 @unique
  animal                 CatalogoTipoMascota @relation(fields: [id_animal], references: [id])
  filtros_demograficos   FiltrosDemoPorRoles @relation(fields: [id_filtro_demo_por_rol], references: [id], onDelete: Cascade)
}

model AparenciasEtnicasPorRoles {
  id                     Int                       @id @default(autoincrement())
  id_aparencia_etnica    Int
  id_filtro_demo_por_rol Int
  aparencia_etnica       CatalogoAparenciasEtnicas @relation(fields: [id_aparencia_etnica], references: [id])
  filtros_demograficos   FiltrosDemoPorRoles       @relation(fields: [id_filtro_demo_por_rol], references: [id], onDelete: Cascade)
}

model CatalogoAparenciasEtnicas {
  id                              Int                            @id
  en                              String
  es                              String
  aparencias_etnicas_por_roles    AparenciasEtnicasPorRoles[]
  filtros_apariencia_por_talentos FiltrosAparenciasPorTalentos[]
}

model GenerosPorRoles {
  id                     Int                 @id @default(autoincrement())
  id_genero              Int
  id_filtro_demo_por_rol Int
  filtros_demograficos   FiltrosDemoPorRoles @relation(fields: [id_filtro_demo_por_rol], references: [id], onDelete: Cascade)
  genero                 CatalogoGeneros     @relation(fields: [id_genero], references: [id])
}

model CatalogoGeneros {
  id                                             Int                                          @id
  en                                             String
  es                                             String
  filtros_aparencias_por_talento                 FiltrosAparenciasPorTalentos[]
  generos_interesados_en_interpetrar_por_talento GenerosInteresadosEnInterpretarPorTalentos[]
  genero_por_roles                               GenerosPorRoles[]
}

model CatalogoPaises {
  id                           Int                            @id
  en                           String
  es                           String
  FiltrosAparenciasPorTalentos FiltrosAparenciasPorTalentos[]
  FiltrosDemoPorRoles          FiltrosDemoPorRoles[]
}

model CompensacionesPorRoles {
  id                                      Int                        @id @default(autoincrement())
  id_rol                                  Int                        @unique
  datos_adicionales                       String
  suma_total_compensaciones_no_monetarias Decimal?
  compensaciones_no_monetarias            CompNoMonetariasPorRoles[]
  rol                                     Roles                      @relation(fields: [id_rol], references: [id], onDelete: Cascade)
  sueldo                                  SueldosPorRoles?
}

model CompNoMonetariasPorRoles {
  id                       Int                    @id @default(autoincrement())
  id_compensacion          Int
  descripcion_compensacion String
  id_comp_por_rol          Int
  compensaciones_por_rol   CompensacionesPorRoles @relation(fields: [id_comp_por_rol], references: [id], onDelete: Cascade)
  compensacion             CatalogosCompNoMones   @relation(fields: [id_compensacion], references: [id])
}

model SueldosPorRoles {
  id                     Int                    @id @default(autoincrement())
  cantidad               Decimal
  periodo                String
  id_comp_por_rol        Int                    @unique
  compensaciones_por_rol CompensacionesPorRoles @relation(fields: [id_comp_por_rol], references: [id], onDelete: Cascade)
}

model Media {
  id                        Int                         @id @default(autoincrement())
  nombre                    String
  clave                     String
  identificador             String
  referencia                String
  type                      String
  url                       String
  public                    Boolean                     @default(true)
  banners                   Banners[]
  cazatalentos              Cazatalentos[]
  CreditoTalento            CreditoTalento[]
  InfoBasicaPorTalentos     InfoBasicaPorTalentos[]
  InfoBasicaRepresentante   InfoBasicaRepresentante[]
  MediaPorTalentos          MediaPorTalentos[]
  archivo_proyecto          Proyecto[]                  @relation("media_archivo")
  foto_portada_proyecto     Proyecto[]                  @relation("media_foto_portada")
  representante             Representante[]
  RepresentantesPorTalentos RepresentantesPorTalentos[]
  foto_referencia_roles     Roles[]                     @relation("media_foto_referencia")
  lineas_roles              Roles[]                     @relation("media_lineas")
  lineas_selftape           SelftapePorRoles[]
  ValidacionRepresentante   ValidacionRepresentante[]
}

model MediaPorTalentos {
  id         Int      @id @default(autoincrement())
  id_talento Int
  id_media   Int
  talento    Talentos @relation(fields: [id_talento], references: [id], onDelete: Cascade)
  media      Media    @relation(fields: [id_media], references: [id], onDelete: Cascade, map: "media_por_talento")
}

model RequisitosPorRoles {
  id                     Int                        @id @default(autoincrement())
  presentacion_solicitud DateTime
  informacion            String
  id_rol                 Int                        @unique
  id_idioma              Int
  id_estado_republica    Int
  id_uso_horario         Int
  medios_multimedia      MediosMultimediaPorRoles[]
  estado_republica       CatalogoEstadosRepublica   @relation(fields: [id_estado_republica], references: [id])
  idioma                 CatalogoIdiomas            @relation(fields: [id_idioma], references: [id])
  uso_horario            CatalogoTipoUsosHorario    @relation(fields: [id_uso_horario], references: [id])
  rol                    Roles                      @relation(fields: [id_rol], references: [id], onDelete: Cascade, map: "requisitos")
}

model CatalogoIdiomas {
  id                 Int                  @id @default(autoincrement())
  es                 String
  en                 String
  RequisitosPorRoles RequisitosPorRoles[]
}

model CatalogoEstadosRepublica {
  id                                Int                               @id @default(autoincrement())
  en                                String
  es                                String
  AplicacionRolPorTalento           AplicacionRolPorTalento[]
  casting_por_roles                 CastingPorRoles[]
  filmacion_por_roles               FilmacionPorRoles[]
  info_basica_por_talento           InfoBasicaPorTalentos[]
  InfoBasicaRepresentante           InfoBasicaRepresentante[]
  locaciones_preferencias           LocacionesPrerenciasPorTalentos[]
  localizaciones_por_horario_agenda LocalizacionesPorHorarioAgenda[]
  proyecto                          Proyecto[]
  requisitos_por_roles              RequisitosPorRoles[]
}

model MediosMultimediaPorRoles {
  id                      Int                      @id @default(autoincrement())
  id_requisitos_por_roles Int
  id_medio_multimedia     Int
  medio_multimedia        CatalogoMediosMultimedia @relation(fields: [id_medio_multimedia], references: [id])
  requisitos_por_rol      RequisitosPorRoles       @relation(fields: [id_requisitos_por_roles], references: [id])
}

model CatalogoMediosMultimedia {
  id                Int                        @id @default(autoincrement())
  en                String
  es                String
  medios_multimedia MediosMultimediaPorRoles[]
}

model CastingPorRoles {
  id                  Int                      @id @default(autoincrement())
  fecha_inicio        DateTime
  fecha_fin           DateTime?
  id_rol              Int
  id_estado_republica Int
  estado_republica    CatalogoEstadosRepublica @relation(fields: [id_estado_republica], references: [id])
  rol                 Roles                    @relation(fields: [id_rol], references: [id], onDelete: Cascade, map: "casting")
}

model FilmacionPorRoles {
  id                  Int                      @id @default(autoincrement())
  fecha_inicio        DateTime
  fecha_fin           DateTime?
  id_rol              Int
  id_estado_republica Int
  estado_republica    CatalogoEstadosRepublica @relation(fields: [id_estado_republica], references: [id])
  rol                 Roles                    @relation(fields: [id_rol], references: [id], onDelete: Cascade, map: "filmacion")
}

model CatalogoTipoVehiculos {
  id                Int               @id
  es                String
  en                String
  vehiculos_talento VehiculoTalento[]
}

model CatalogoTipoMascota {
  id               Int              @id
  es               String
  en               String
  animal_por_roles AnimalPorRoles[]
  mascotas_talento MascotaTalento[]
}

model CatalogoRazaMascota {
  id               Int              @id
  es               String
  en               String
  mascotas_talento MascotaTalento[]
}

model CatalogoTipoVestuario {
  id                        Int                               @id
  es                        String
  en                        String
  tipo_vestuario_especifico CatalogoTipoVestuarioEspecifico[]
}

model CatalogoTipoVestuarioEspecifico {
  id                Int                   @id
  id_tipo_vestuario Int
  es                String
  en                String
  tipo_vestuario    CatalogoTipoVestuario @relation(fields: [id_tipo_vestuario], references: [id], onDelete: Cascade)
  vestuario_talento VestuarioTalento[]
}

model CatalogoTipoProps {
  id            Int            @id
  es            String
  en            String
  props_talento PropsTalento[]
}

model CatalogoTipoEquipoDeportivo {
  id                       Int                      @id
  es                       String
  en                       String
  equipo_deportivo_talento EquipoDeportivoTalento[]
}

model FiltrosAparenciasPorTalentos {
  id                                        Int                                          @id @default(autoincrement())
  id_talento                                Int                                          @unique
  rango_inicial_edad                        Int
  rango_final_edad                          Int
  id_genero                                 Int
  id_apariencia_etnica                      Int
  id_color_cabello                          Int
  disposicion_cambio_color_cabello          Boolean
  id_estilo_cabello                         Int
  disposicion_corte_cabello                 Boolean
  id_vello_facial                           Int
  disposicion_afeitar_o_crecer_vello_facial Boolean
  id_color_ojos                             Int
  id_pais                                   Int                                          @default(1)
  apariencia_etnica                         CatalogoAparenciasEtnicas                    @relation(fields: [id_apariencia_etnica], references: [id])
  color_cabello                             CatalogoColorCabello                         @relation(fields: [id_color_cabello], references: [id])
  color_ojos                                CatalogoColorOjos                            @relation(fields: [id_color_ojos], references: [id])
  estilo_cabello                            CatalogoEstiloCabello                        @relation(fields: [id_estilo_cabello], references: [id])
  genero                                    CatalogoGeneros                              @relation(fields: [id_genero], references: [id])
  nacionalidad                              CatalogoPaises                               @relation(fields: [id_pais], references: [id])
  talento                                   Talentos                                     @relation(fields: [id_talento], references: [id])
  vello_facial                              CatalogoVelloFacial                          @relation(fields: [id_vello_facial], references: [id])
  generos_interesados_en_interpretar        GenerosInteresadosEnInterpretarPorTalentos[]
  particularidades                          ParticularidadesPorTalentos[]
  piercings                                 PiercingsPorTalentos[]
  tatuajes                                  TatuajesPorTalentos[]
  hermanos                                  TipoHermanosPorTalento?
}

model ParticularidadesPorTalentos {
  id                                  Int                          @id @default(autoincrement())
  id_filtros_apariencias_por_talentos Int
  id_particularidad                   Int
  descripcion                         String
  filtros_apariencias                 FiltrosAparenciasPorTalentos @relation(fields: [id_filtros_apariencias_por_talentos], references: [id])
  particularidad                      CatalogoParticularidades     @relation(fields: [id_particularidad], references: [id])
}

model PiercingsPorTalentos {
  id                                  Int                          @id @default(autoincrement())
  id_filtros_apariencias_por_talentos Int
  id_tipo_piercing                    Int
  descripcion                         String
  filtros_apariencias                 FiltrosAparenciasPorTalentos @relation(fields: [id_filtros_apariencias_por_talentos], references: [id])
  piercing                            CatalogoTiposPiercings       @relation(fields: [id_tipo_piercing], references: [id])
}

model TipoHermanosPorTalento {
  id                                  Int                          @id @default(autoincrement())
  id_filtros_apariencias_por_talentos Int                          @unique
  id_tipo_hermanos                    Int
  descripcion                         String
  filtros_apariencias                 FiltrosAparenciasPorTalentos @relation(fields: [id_filtros_apariencias_por_talentos], references: [id])
}

model CatalogoTiposHermanos {
  id Int    @id
  es String
  en String
}

model CatalogoTiposPiercings {
  id                     Int                    @id
  es                     String
  en                     String
  piercings_por_talentos PiercingsPorTalentos[]
}

model TatuajesPorTalentos {
  id                                  Int                          @id @default(autoincrement())
  id_filtros_apariencias_por_talentos Int
  descripcion                         String
  id_tipo_tatuaje                     Int
  filtros_apariencias                 FiltrosAparenciasPorTalentos @relation(fields: [id_filtros_apariencias_por_talentos], references: [id])
  tipo_tatuaje                        CatalogoTiposTatuajes        @relation(fields: [id_tipo_tatuaje], references: [id])
}

model GenerosInteresadosEnInterpretarPorTalentos {
  id                                  Int                          @id @default(autoincrement())
  id_filtros_apariencias_por_talentos Int
  id_genero                           Int
  filtros_apariencias                 FiltrosAparenciasPorTalentos @relation(fields: [id_filtros_apariencias_por_talentos], references: [id])
  genero                              CatalogoGeneros              @relation(fields: [id_genero], references: [id])
}

model PreferenciasPorTalentos {
  id                              Int                               @id @default(autoincrement())
  interesado_en_trabajos_de_extra Boolean
  id_talento                      Int                               @unique
  nombre_agente                   String?
  contacto_agente                 String?
  meses_embarazo                  Int?
  disponibilidades                DisponibilidadesPorTalentos[]
  documentos                      DocumentosPorTalentos[]
  interes_en_proyectos            InteresEnProyectosPorTalentos[]
  locaciones                      LocacionesPrerenciasPorTalentos[]
  otras_profesiones               OtrasProfesionesPorTalentos[]
  talento                         Talentos                          @relation(fields: [id_talento], references: [id])
  tipos_de_trabajo                TiposDeTrabajoPorTalentos[]
}

model OtrasProfesionesPorTalentos {
  id                           Int                     @id @default(autoincrement())
  id_preferencias_por_talentos Int
  descripcion                  String
  preferencias_por_talentos    PreferenciasPorTalentos @relation(fields: [id_preferencias_por_talentos], references: [id], onDelete: Cascade)
}

model DisponibilidadesPorTalentos {
  id                           Int                        @id @default(autoincrement())
  id_preferencias_por_talentos Int
  id_disponibilidad            Int
  disponibilidad               CatalogoTipoDisponibilidad @relation(fields: [id_disponibilidad], references: [id])
  preferencias_por_talentos    PreferenciasPorTalentos    @relation(fields: [id_preferencias_por_talentos], references: [id], onDelete: Cascade)
}

model DocumentosPorTalentos {
  id                           Int                     @id @default(autoincrement())
  id_preferencias_por_talentos Int
  id_documento                 Int
  descripcion                  String
  documento                    CatalogoTipoDocumentos  @relation(fields: [id_documento], references: [id])
  preferencias_por_talentos    PreferenciasPorTalentos @relation(fields: [id_preferencias_por_talentos], references: [id], onDelete: Cascade)
}

model LocacionesPrerenciasPorTalentos {
  id                           Int                      @id @default(autoincrement())
  id_preferencias_por_talentos Int
  es_principal                 Boolean
  id_estado_republica          Int
  estado_republica             CatalogoEstadosRepublica @relation(fields: [id_estado_republica], references: [id])
  preferencias_por_talentos    PreferenciasPorTalentos  @relation(fields: [id_preferencias_por_talentos], references: [id], onDelete: Cascade)
}

model InteresEnProyectosPorTalentos {
  id                           Int                          @id @default(autoincrement())
  id_preferencias_por_talentos Int
  id_interes_en_proyecto       Int
  intereses_en_proyectos       CatalogoTipoInteresProyectos @relation(fields: [id_interes_en_proyecto], references: [id])
  preferencias_por_talentos    PreferenciasPorTalentos      @relation(fields: [id_preferencias_por_talentos], references: [id], onDelete: Cascade)
}

model TiposDeTrabajoPorTalentos {
  id                           Int                     @id @default(autoincrement())
  id_preferencias_por_talentos Int
  id_tipo_de_trabajo           Int
  preferencias_por_talentos    PreferenciasPorTalentos @relation(fields: [id_preferencias_por_talentos], references: [id], onDelete: Cascade)
  tipos_de_trabajo             CatalogoTipoTrabajo     @relation(fields: [id_tipo_de_trabajo], references: [id])
}

model ActivosPorTalentos {
  id               Int                      @id @default(autoincrement())
  id_talento       Int                      @unique
  talento          Talentos                 @relation(fields: [id_talento], references: [id])
  equipo_deportivo EquipoDeportivoTalento[]
  mascotas         MascotaTalento[]
  props            PropsTalento[]
  vehiculos        VehiculoTalento[]
  vestuario        VestuarioTalento[]
}

model VehiculoTalento {
  id                   Int                   @id @default(autoincrement())
  id_activos_talentos  Int
  id_tipo_vehiculo     Int
  marca                String
  modelo               String
  color                String
  anio                 Int
  activos_por_talentos ActivosPorTalentos    @relation(fields: [id_activos_talentos], references: [id], onDelete: Cascade)
  tipo_vehiculo        CatalogoTipoVehiculos @relation(fields: [id_tipo_vehiculo], references: [id])
}

model MascotaTalento {
  id                   Int                  @id @default(autoincrement())
  id_activos_talentos  Int
  id_tipo_mascota      Int
  id_raza              Int?
  tamanio              String
  activos_por_talentos ActivosPorTalentos   @relation(fields: [id_activos_talentos], references: [id], onDelete: Cascade)
  raza_mascota         CatalogoRazaMascota? @relation(fields: [id_raza], references: [id])
  tipo_mascota         CatalogoTipoMascota  @relation(fields: [id_tipo_mascota], references: [id])
}

model VestuarioTalento {
  id                           Int                             @id @default(autoincrement())
  id_activos_talentos          Int
  descripcion                  String
  id_tipo_vestuario_especifico Int
  activos_por_talentos         ActivosPorTalentos              @relation(fields: [id_activos_talentos], references: [id], onDelete: Cascade)
  tipo_vestuario_especifico    CatalogoTipoVestuarioEspecifico @relation(fields: [id_tipo_vestuario_especifico], references: [id])
}

model PropsTalento {
  id                   Int                @id @default(autoincrement())
  id_activos_talentos  Int
  id_tipo_props        Int
  descripcion          String
  activos_por_talentos ActivosPorTalentos @relation(fields: [id_activos_talentos], references: [id], onDelete: Cascade)
  tipo_props           CatalogoTipoProps  @relation(fields: [id_tipo_props], references: [id])
}

model EquipoDeportivoTalento {
  id                       Int                         @id @default(autoincrement())
  id_activos_talentos      Int
  id_tipo_equipo_deportivo Int
  descripcion              String
  activos_por_talentos     ActivosPorTalentos          @relation(fields: [id_activos_talentos], references: [id], onDelete: Cascade)
  tipo_equipo_deportivo    CatalogoTipoEquipoDeportivo @relation(fields: [id_tipo_equipo_deportivo], references: [id])
}

model CatalogoTiposTatuajes {
  id                   Int                   @id
  es                   String
  en                   String
  tatuajes_por_talento TatuajesPorTalentos[]
}

model CatalogoTipoTrabajo {
  id                             Int                         @id
  es                             String
  en                             String
  tipo_trabajo_por_roles         TipoTrabajoPorRoles[]
  tipos_de_trabajos_por_talentos TiposDeTrabajoPorTalentos[]
}

model CatalogoTipoDocumentos {
  id                      Int                     @id
  es                      String
  en                      String
  documentos_por_talentos DocumentosPorTalentos[]
}

model CatalogoColorCabello {
  id                               Int                            @id
  es                               String
  en                               String
  filtros_apariencias_por_talentos FiltrosAparenciasPorTalentos[]
  rol                              Roles[]
}

model CatalogoEstiloCabello {
  id                               Int                            @id
  es                               String
  en                               String
  filtros_apariencias_por_talentos FiltrosAparenciasPorTalentos[]
}

model CatalogoVelloFacial {
  id                               Int                            @id
  es                               String
  en                               String
  filtros_apariencias_por_talentos FiltrosAparenciasPorTalentos[]
}

model CatalogoColorOjos {
  id                               Int                            @id
  es                               String
  en                               String
  filtros_apariencias_por_talentos FiltrosAparenciasPorTalentos[]
  rol                              Roles[]
}

model CatalogoParticularidades {
  id                            Int                           @id
  es                            String
  en                            String
  particularidades_por_talentos ParticularidadesPorTalentos[]
}

model CatalogoTipoDisponibilidad {
  id                            Int                           @id
  es                            String
  en                            String
  disponibilidades_por_talentos DisponibilidadesPorTalentos[]
}

model CatalogoTipoInteresProyectos {
  id                       Int                             @id
  es                       String
  en                       String
  tipo_intereses_proyectos InteresEnProyectosPorTalentos[]
}
